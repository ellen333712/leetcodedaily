class Solution {
    public int longestValidParentheses(String s) {
        int len = s.length();
        int[] dp = new int[len];
        Stack<Integer> stack = new Stack<>();
        int max = 0;
        
        for (int i = 0; i < len; i++) {
            char c = s.charAt(i);
            if (c == '(') {
                stack.push(i);
                continue;
            }
            if (stack.isEmpty()) {
                continue;
            }
            int top = stack.pop();
            dp[i] = i - top + 1;
            if (top > 0) {
                dp[i] += dp[top-1];
            }
            max = Math.max(max, dp[i]);
        }
        
        return max;
    }
}
