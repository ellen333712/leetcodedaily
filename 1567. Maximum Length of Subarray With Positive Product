class Solution {
    public int getMaxLen(int[] nums) {
        int len = nums.length;
        int[] positive = new int[len];
        int[] negative = new int[len];
        int[] zero = new int[len];
        int max = 0;
        
        for (int i = 0; i < len; i++) {
            int n = nums[i];
            if (n == 0) {
                zero[i] = 1;
                continue;
            }
            if (i == 0 || zero[i-1] == 1) {
                if (n > 0) {
                    positive[i] = 1;
                    max = Math.max(positive[i], max);
                    continue;
                }
                if (n < 0) {
                    negative[i] = 1;
                    max = Math.max(positive[i], max);
                    continue;
                }
            }
            
            if (n > 0) {
                positive[i] = positive[i-1] + 1;
                negative[i] = negative[i-1] == 0 ? 0 : negative[i-1] + 1;
            } else if (n < 0) {
                negative[i] = positive[i-1] + 1;
                positive[i] = negative[i-1] == 0 ? 0 : negative[i-1] + 1;
            }
            
            max = Math.max(positive[i], max);
        }
        
        return max;
    }
}
